{"version":3,"sources":["logo.svg","gsap-bonus/DrawSVGPlugin.js","components/Logo.jsx","components/CardContainer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","global","_gsScope","this","window","_gsQueue","push","DrawSVGPlugin","_doc","document","_getComputedStyle","defaultView","getComputedStyle","_numbersExp","_isEdge","navigator","userAgent","indexOf","getDistance","x1","y1","x2","y2","scaleX","scaleY","parseFloat","Math","sqrt","unwrap","element","nodeType","TweenLite","selector","length","getLength","bbox","points","prevPoint","i","rx","ry","type","tagName","toLowerCase","getAttribute","getScreenCTM","a","d","getBBox","e","width","height","style","strokeDasharray","getTotalLength","console","log","x","y","match","PI","getPosition","cs","dash","offset","strokeDashoffset","substr","max","_gsDefine","plugin","propName","API","version","overwriteProps","init","target","value","tween","index","start","end","overage","_style","defaultStart","s","undefined","parse","_length","_dash","_offset","_addTween","strokeLinecap","strokeLinejoin","strokeMiterlimit","set","ratio","_firstPT","_super","setRatio","call","pop","require","GreenSockGlobals","Logo","state","animationComplete","completed","_this","props","handleComplete","visibility","tl","TimelineLite","onComplete","fromTo","drawSVG","opacity","delay","left","top","transform","position","fill","react_default","createElement","class","className","viewBox","Component","CardContainer","App","setState","components_Logo","components_CardContainer","Boolean","location","hostname","ReactDOM","render","src_App_0","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.12a79425.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.834adf72.svg\";","/*!\n * VERSION: 0.1.5\n * DATE: 2017-09-05\n * UPDATES AND DOCS AT: http://greensock.com\n *\n * @license Copyright (c) 2008-2017, GreenSock. All rights reserved.\n * DrawSVGPlugin is a Club GreenSock membership benefit; You must have a valid membership to use\n * this code without violating the terms of use. Visit http://greensock.com/club/ to sign up or get more details.\n * This work is subject to the software agreement that was issued with your membership.\n * \n * @author: Jack Doyle, jack@greensock.com\n */\nvar _gsScope = (typeof(module) !== \"undefined\" && module.exports && typeof(global) !== \"undefined\") ? global : this || window; //helps ensure compatibility with AMD/RequireJS and CommonJS/Node\n(_gsScope._gsQueue || (_gsScope._gsQueue = [])).push( function() {\n\n\tvar _doc = _gsScope.document,\n\t\t_getComputedStyle = _doc.defaultView ? _doc.defaultView.getComputedStyle : function() {},\n\t\t_numbersExp = /(?:(-|-=|\\+=)?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[0-9]/ig,\n\t\t_isEdge = (((_gsScope.navigator || {}).userAgent || \"\").indexOf(\"Edge\") !== -1), //Microsoft Edge has a bug that causes it not to redraw the path correctly if the stroke-linecap is anything other than \"butt\" (like \"round\") and it doesn't match the stroke-linejoin. A way to trigger it is to change the stroke-miterlimit, so we'll only do that if/when we have to (to maximize performance)\n\t\tDrawSVGPlugin;\n\n\tfunction getDistance(x1, y1, x2, y2, scaleX, scaleY) {\n\t\tx2 = (parseFloat(x2 || 0) - parseFloat(x1 || 0)) * scaleX;\n\t\ty2 = (parseFloat(y2 || 0) - parseFloat(y1 || 0)) * scaleY;\n\t\treturn Math.sqrt(x2 * x2 + y2 * y2);\n\t}\n\n\tfunction unwrap(element) {\n\t\tif (typeof(element) === \"string\" || !element.nodeType) {\n\t\t\telement = _gsScope.TweenLite.selector(element);\n\t\t\tif (element.length) {\n\t\t\t\telement = element[0];\n\t\t\t}\n\t\t}\n\t\treturn element;\n\t}\n\n\t//accepts values like \"100%\" or \"20% 80%\" or \"20 50\" and parses it into an absolute start and end position on the line/stroke based on its length. Returns an an array with the start and end values, like [0, 243]\n\tfunction parse(value, length, defaultStart) {\n\t\tvar i = value.indexOf(\" \"),\n\t\t\ts, e;\n\t\tif (i === -1) {\n\t\t\ts = defaultStart !== undefined ? defaultStart + \"\" : value;\n\t\t\te = value;\n\t\t} else {\n\t\t\ts = value.substr(0, i);\n\t\t\te = value.substr(i+1);\n\t\t}\n\t\ts = (s.indexOf(\"%\") !== -1) ? (parseFloat(s) / 100) * length : parseFloat(s);\n\t\te = (e.indexOf(\"%\") !== -1) ? (parseFloat(e) / 100) * length : parseFloat(e);\n\t\treturn (s > e) ? [e, s] : [s, e];\n\t}\n\n\tfunction getLength(element) {\n\t\tif (!element) {\n\t\t\treturn 0;\n\t\t}\n\t\telement = unwrap(element);\n\t\tvar type = element.tagName.toLowerCase(),\n\t\t\tscaleX = 1,\n\t\t\tscaleY = 1,\n\t\t\tlength, bbox, points, prevPoint, i, rx, ry;\n\t\tif (element.getAttribute(\"vector-effect\") === \"non-scaling-stroke\") { //non-scaling-stroke basically scales the shape and then strokes it at the screen-level (after transforms), thus we need to adjust the length accordingly.\n\t\t\tscaleY = element.getScreenCTM();\n\t\t\tscaleX = scaleY.a;\n\t\t\tscaleY = scaleY.d;\n\t\t}\n\t\ttry { //IE bug: calling <path>.getTotalLength() locks the repaint area of the stroke to whatever its current dimensions are on that frame/tick. To work around that, we must call getBBox() to force IE to recalculate things.\n\t\t\tbbox = element.getBBox(); //solely for fixing bug in IE - we don't actually use the bbox.\n\t\t} catch (e) {\n\t\t\t//firefox has a bug that throws an error if the element isn't visible.\n\t\t}\n\t\tif ((!bbox || (!bbox.width && !bbox.height)) && (type === \"rect\" || type === \"circle\" || type === \"ellipse\")) { //if the element isn't visible, try to discern width/height using its attributes.\n\t\t\tbbox = {\n\t\t\t\twidth: parseFloat( element.getAttribute( (type === \"rect\") ? \"width\" : (type === \"circle\") ? \"r\" : \"rx\")),\n\t\t\t\theight: parseFloat( element.getAttribute( (type === \"rect\") ? \"height\" : (type === \"circle\") ? \"r\" : \"ry\") )\n\t\t\t};\n\t\t\tif (type !== \"rect\") {\n\t\t\t\tbbox.width *= 2;\n\t\t\t\tbbox.height *= 2;\n\t\t\t}\n\t\t}\n\t\tif (type === \"path\") {\n\t\t\tprevPoint = element.style.strokeDasharray;\n\t\t\telement.style.strokeDasharray = \"none\";\n\t\t\tlength = element.getTotalLength() || 0;\n\t\t\tif (scaleX !== scaleY) {\n\t\t\t\tconsole.log(\"Warning: <path> length cannot be measured accurately when vector-effect is non-scaling-stroke and the element isn't proportionally scaled.\");\n\t\t\t}\n\t\t\tlength *= (scaleX + scaleY) / 2;\n\t\t\telement.style.strokeDasharray = prevPoint;\n\t\t} else if (type === \"rect\") {\n\t\t\tlength = bbox.width * 2 * scaleX + bbox.height * 2 * scaleY;\n\t\t} else if (type === \"line\") {\n\t\t\tlength = getDistance(bbox.x, bbox.y, bbox.x + bbox.width, bbox.y + bbox.height, scaleX, scaleY);\n\t\t} else if (type === \"polyline\" || type === \"polygon\") {\n\t\t\tpoints = element.getAttribute(\"points\").match(_numbersExp) || [];\n\t\t\tif (type === \"polygon\") {\n\t\t\t\tpoints.push(points[0], points[1]);\n\t\t\t}\n\t\t\tlength = 0;\n\t\t\tfor (i = 2; i < points.length; i+=2) {\n\t\t\t\tlength += getDistance(points[i-2], points[i-1], points[i], points[i+1], scaleX, scaleY) || 0;\n\t\t\t}\n\t\t} else if (type === \"circle\" || type === \"ellipse\") {\n\t\t\trx = (bbox.width / 2) * scaleX;\n\t\t\try = (bbox.height / 2) * scaleY;\n\t\t\tlength = Math.PI * ( 3 * (rx + ry) - Math.sqrt((3 * rx + ry) * (rx + 3 * ry)) );\n\t\t}\n\t\treturn length || 0;\n\t}\n\n\tfunction getPosition(element, length) {\n\t\tif (!element) {\n\t\t\treturn [0, 0];\n\t\t}\n\t\telement = unwrap(element);\n\t\tlength = length || (getLength(element) + 1);\n\t\tvar cs = _getComputedStyle(element),\n\t\t\tdash = cs.strokeDasharray || \"\",\n\t\t\toffset = parseFloat(cs.strokeDashoffset),\n\t\t\ti = dash.indexOf(\",\");\n\t\tif (i < 0) {\n\t\t\ti = dash.indexOf(\" \");\n\t\t}\n\t\tdash = (i < 0) ? length : parseFloat(dash.substr(0, i)) || 0.00001;\n\t\tif (dash > length) {\n\t\t\tdash = length;\n\t\t}\n\t\treturn [Math.max(0, -offset), Math.max(0, dash - offset)];\n\t}\n\n\tDrawSVGPlugin = _gsScope._gsDefine.plugin({\n\t\tpropName: \"drawSVG\",\n\t\tAPI: 2,\n\t\tversion: \"0.1.5\",\n\t\tglobal: true,\n\t\toverwriteProps: [\"drawSVG\"],\n\n\t\tinit: function(target, value, tween, index) {\n\t\t\tif (!target.getBBox) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar length = getLength(target) + 1,\n\t\t\t\tstart, end, overage, cs;\n\t\t\tthis._style = target.style;\n\t\t\tif (typeof(value) === \"function\") {\n\t\t\t\tvalue = value(index, target);\n\t\t\t}\n\t\t\tif (value === true || value === \"true\") {\n\t\t\t\tvalue = \"0 100%\";\n\t\t\t} else if (!value) {\n\t\t\t\tvalue = \"0 0\";\n\t\t\t} else if ((value + \"\").indexOf(\" \") === -1) {\n\t\t\t\tvalue = \"0 \" + value;\n\t\t\t}\n\t\t\tstart = getPosition(target, length);\n\t\t\tend = parse(value, length, start[0]);\n\t\t\tthis._length = length + 10;\n\t\t\tif (start[0] === 0 && end[0] === 0) {\n\t\t\t\toverage = Math.max(0.00001, end[1] - length); //allow people to go past the end, like values of 105% because for some paths, Firefox doesn't return an accurate getTotalLength(), so it could end up coming up short.\n\t\t\t\tthis._dash = length + overage;\n\t\t\t\tthis._offset = length - start[1] + overage;\n\t\t\t\tthis._addTween(this, \"_offset\", this._offset, length - end[1] + overage, \"drawSVG\");\n\t\t\t} else {\n\t\t\t\tthis._dash = (start[1] - start[0]) || 0.000001; //some browsers render artifacts if dash is 0, so we use a very small number in that case.\n\t\t\t\tthis._offset = -start[0];\n\t\t\t\tthis._addTween(this, \"_dash\", this._dash, (end[1] - end[0]) || 0.00001, \"drawSVG\");\n\t\t\t\tthis._addTween(this, \"_offset\", this._offset, -end[0], \"drawSVG\");\n\t\t\t}\n\t\t\tif (_isEdge) { //to work around a bug in Microsoft Edge, animate the stroke-miterlimit by 0.0001 just to trigger the repaint (only necessary if stroke-linecap isn't \"butt\"; also unnecessary if it's \"round\" and stroke-linejoin is also \"round\"). Imperceptible, relatively high-performance, and effective. Another option was to set the \"d\" <path> attribute to its current value on every tick, but that seems like it'd be much less performant.\n\t\t\t\tcs = _getComputedStyle(target);\n\t\t\t\tend = cs.strokeLinecap;\n\t\t\t\tif (end !== \"butt\" && end !== cs.strokeLinejoin) {\n\t\t\t\t\tend = parseFloat(cs.strokeMiterlimit);\n\t\t\t\t\tthis._addTween(target.style, \"strokeMiterlimit\", end, end + 0.0001, \"strokeMiterlimit\");\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t//called each time the values should be updated, and the ratio gets passed as the only parameter (typically it's a value between 0 and 1, but it can exceed those when using an ease like Elastic.easeOut or Back.easeOut, etc.)\n\t\tset: function(ratio) {\n\t\t\tif (this._firstPT) {\n\t\t\t\tthis._super.setRatio.call(this, ratio);\n\t\t\t\tthis._style.strokeDashoffset = this._offset;\n\t\t\t\tif (ratio === 1 || ratio === 0) {\n\t\t\t\t\tthis._style.strokeDasharray = (this._offset < 0.001 && this._length - this._dash <= 10) ? \"none\" : (this._offset === this._dash) ? \"0px, 999999px\" : this._dash + \"px,\" + this._length + \"px\";\n\t\t\t\t} else {\n\t\t\t\t\tthis._style.strokeDasharray = this._dash + \"px,\" + this._length + \"px\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t});\n\n\tDrawSVGPlugin.getLength = getLength;\n\tDrawSVGPlugin.getPosition = getPosition;\n\n}); if (_gsScope._gsDefine) { _gsScope._gsQueue.pop()(); }\n//export to AMD/RequireJS and CommonJS/Node (precursor to full modular build system coming at a later date)\n(function(name) {\n\tvar getGlobal = function() {\n\t\treturn (_gsScope.GreenSockGlobals || _gsScope)[name];\n\t};\n\tif (typeof(module) !== \"undefined\" && module.exports) { //node\n\t\trequire(\"gsap/TweenLite\");\n\t\tmodule.exports = getGlobal();\n\t} \n}(\"DrawSVGPlugin\"));","import React, { Component } from 'react';\nimport { TimelineLite, TweenLite } from \"gsap/TweenMax\";\nimport logo from '../logo.svg';\nimport DrawSVG from '../gsap-bonus/DrawSVGPlugin.js';\n\nclass Logo extends Component {\n    state = {\n        animationComplete: false\n    }\n\n    componentDidMount(){\n        TweenLite.set(\".svg-line\", {visibility:\"visible\"});\n        const tl = new TimelineLite({ onComplete: this.completed});\n        tl.fromTo(\".svg-line\", 5, {drawSVG:0, opacity: 0}, {drawSVG:\"102%\", opacity: 1}, \"-=1\").delay(1);\n        tl.fromTo(\".App-logo\", 2, {left: \"50%\", top: \"50%\", height: '500px', transform: \"translate(-50%,-50%)\", position: \"absolute\"}, {left: \"0px\",  top: \"10px\", height: \"90px\", transform: \"translate(0%,0%)\"}, \"-=1\", \"ease\").delay(1);\n        tl.fromTo(\".svg-line\", 2, {fill: \"none\"}, {fill: \"#fff\"}, \"-=1\").delay(3);\n    }\n    \n    completed = () => {\n       this.props.handleComplete(true);\n    }\n\n    render(){\n        return(\n            <div class=\"logo__wrapper\">\n                     \n<svg x=\"0px\" y=\"0px\" className=\"App-logo\" height=\"150px\" width=\"400px\" viewBox=\"0 0 111 50\"> <g> <g> <g> <path className=\"svg-line\" d=\"M63.2,32.5V16.3l-8.8,0.5v0.8c2.2,0,2.8,0.8,2.8,1.9v13c0,0.9-0.6,1.3-2.8,1.4v0.8h11.4v-0.8\nC63.6,33.8,63.2,33.4,63.2,32.5z\"></path> </g> <g> <path className=\"svg-line\" d=\"M11.7,32.9c-1.8,0-2.3-1.1-2.3-3.3V18.3h5.5v-1.7H9.4V9.9l-5.9,1.7v5L0,17.3v1.1h3.4v10.9c0,4.3,2.7,5.7,5.9,5.7\nc3.2,0,4.7-1.4,5.8-4.4l-0.9-0.4C13.4,32,12.5,32.9,11.7,32.9z\"></path> </g> <g> <path className=\"svg-line\" d=\"M29.9,16.2c-0.1,0-0.3,0-0.4,0c0,0-0.1,0-0.1,0c-0.1,0-0.2,0-0.3,0c0,0-0.1,0-0.2,0c-0.1,0-0.2,0-0.2,0c-0.1,0-0.1,0-0.2,0\nc-0.1,0-0.1,0-0.2,0.1c0,0,0,0,0,0c0,0,0,0,0,0c-0.1,0-0.1,0-0.2,0.1c-1.3,0.5-2.5,1.4-3.3,2.8v0c0,0,0,0.1,0,0.1c0,0,0,0.1,0,0.1\nc-0.1,0.2-0.2,0.4-0.3,0.6v-3.7l-8.6,0.5v0.8c2.2,0,2.6,0.8,2.6,1.9v13c0,0.9-0.4,1.3-2.6,1.4v0.8h12.2v-0.8\nc-3-0.1-3.6-0.4-3.6-1.4V21.1c0,0,0,0,0,0c0.8-1.3,2.2-2.2,2.9-2.3c0,0,0,0,0,0c-0.1,0.4-0.2,0.9-0.2,1.3c0,1.6,1.2,3.1,3.3,3.1\nc1.8,0,3.1-1.4,3.1-3.5C33.7,17.7,32.4,16.2,29.9,16.2z\"></path> </g> <g> <path className=\"svg-line\" d=\"M87.3,32.5V22c0-3.8-1.5-5.9-4.9-5.9c-2.5,0-5.1,1.5-6.7,3.9v-1.4v-3.5V8.5l0,0C75.5,3.8,71.2,0,66,0c0,0,0,0,0,0\nc-4.6,0-9.9,3.5-9.6,9.5c0.1,1.1,0.5,2.2,1.3,3c0.6,0.6,1.4,1.1,2.6,1.1c1.9,0,3.5-1.6,3.5-3.5c0-1.9-1.6-3.5-3.5-3.5\nc-0.2,0-0.4,0-0.6,0.1c-0.2,0-0.4,0.1-0.6,0.2c0,0-0.1,0-0.1,0.1c-0.3,0.1-0.6-0.1-0.7-0.2c-0.2-0.3-0.2-1,0.1-1.5\nc1.5-2.6,4.4-4.3,7.8-4.3c4.8,0,8.7,3.6,8.7,8c0,4-3.2,7.4-7.4,7.9c-0.1,0-0.2,0-0.3,0v0c0,0,0,0,0,0v0.8c0,0,0,0,0,0v0\nc2.2,0,2.6,0.8,2.6,1.9v0.7v12.2c0,0.9-0.4,1.3-2.6,1.4v0.8h10.6v-0.8c-1.3,0-1.9-0.4-1.9-1.4V21.1c1-1.2,1.9-1.9,3.1-1.9\nc1.8,0,2.5,0.8,2.5,2.9v10.4c0,0.9-0.6,1.3-2,1.4v0.8h10.6v-0.8C87.7,33.8,87.3,33.4,87.3,32.5z\"></path> </g> <g> <path className=\"svg-line\" d=\"M110.7,32.5c-2,0.9-2.7,0.6-2.7-1.4v-8.5c0-2.7-0.9-4.5-2.6-5.5c-1.2-0.7-2.9-1.1-5-1.1c-6,0-8.4,1.5-8.4,3.9\nc0,1.6,1.3,2.9,3,2.9c1.9,0,3-1.1,3-2.9c0-0.8-0.3-1.5-0.8-2.1c0.1-0.1,1.1-0.8,2.2-0.8c1.6,0,2.5,0.6,2.7,2.5\nc0,0.3,0.1,0.7,0.1,1.1v3.6c-1.6,0.4-6,0-8.7,1.5c-1.6,0.9-2.5,2.6-2.5,4.2c0,2.3,1.7,4.9,5.6,4.9c2.6,0,4.4-1.5,5.8-3h0.2\nc0.4,2,1.6,3,4.2,3c1.7,0,3-0.7,4.4-1.8L110.7,32.5z M102,30.5c-0.5,0.8-1.5,1.7-2.4,1.7c-1.5,0-2.5-0.9-2.5-2.8c0-2.9,1-3.6,4.9-4\nV30.5z\"></path> </g> <g> <path className=\"svg-line\" d=\"M51.3,31.2v-8.5c0-2.7-0.9-4.5-2.6-5.5c-1.2-0.7-2.9-1.1-5-1.1c-6,0-8.4,1.5-8.4,3.9c0,1.6,1.3,2.9,3,2.9\nc1.9,0,3-1.1,3-2.9c0-0.8-0.3-1.5-0.8-2.1c0.1-0.1,1.1-0.8,2.2-0.8c1.6,0,2.5,0.6,2.7,2.5c0,0.3,0.1,0.7,0.1,1.1v3.6\nc-1.6,0.4-6,0-8.7,1.5c-1.6,0.9-2.5,2.6-2.5,4.2c0,2.3,1.7,4.9,5.6,4.9c2.6,0,4.4-1.5,5.8-3h0.2c0.4,2,1.6,3,4.2,3\nc1.7,0,3-0.7,4.4-1.8L54,32.5C52.1,33.5,51.3,33.1,51.3,31.2z M45.4,30.5c-0.5,0.8-1.5,1.7-2.4,1.7c-1.5,0-2.5-0.9-2.5-2.8\nc0-2.9,1-3.6,4.9-4V30.5z\"></path> </g> </g> </g> </svg>\n            </div>\n        )\n    }\n        \n}\nexport default Logo;","import React, {Component} from 'react';\n\nclass CardContainer extends Component {\n    render(){\n        return(\n        <div className=\"fillerbox\">\n          <h1 className=\"white-text\"> Test </h1>\n          <div className=\"fillerbox\"></div>\n          <div className=\"fillerbox\"></div>\n          <div className=\"fillerbox\"></div>\n        <div className=\"fillerbox\"></div></div>\n        )\n    }\n}\n\nexport default CardContainer;","import React, { Component } from 'react';\nimport Logo from './components/Logo';\nimport CardContainer from './components/CardContainer';\nimport './App.css';\n\nclass App extends Component {\n    state = {\n        animationComplete: false\n    }\n\n    handleComplete = completed => {\n        if(completed){\n            this.setState({ animationComplete: true })\n        }\n    }\n\n    render() {\n        return ( \n            <div className = \"App\" >\n            <header className = \"App-header\" >\n                <Logo handleComplete={this.handleComplete} />\n            </header>\n            { this.state.animationComplete ? <CardContainer  /> : null }\n            </div>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}